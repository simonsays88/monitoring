<?php

namespace AppBundle\Repository;

/**
 * PackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PackRepository extends \Doctrine\ORM\EntityRepository
{

    public function getAllPacksFoodAndFoodBody($completed, $packTypeId, $name)
    {
        $q = $this->createQueryBuilder('p')
            ->where('p.pack_type != :type');
        $q->join('p.initial', 'i');

        if ($completed !== null && $completed != 'all') {
            $q->andWhere('i.completed = :completed')
                ->setParameter('completed', $completed);
        }
        if ($packTypeId !== null && $packTypeId != 'all') {
            $q->andWhere('p.pack_type_id = :pack_type_id')
                ->setParameter('pack_type_id', $packTypeId);
            $q->andWhere('p.status != :status')
                ->setParameter('status', 'finished');
        }
        if ($name) {
            $q->andWhere('i.lastname LIKE :lastname OR i.firstname LIKE :lastname')
                ->setParameter('lastname', '%'.$name.'%');
        }
        $q->orderBy('p.startedAt', 'DESC')
            ->setParameter('type', 'themes');

        return $q->getQuery()->getResult();
    }

    public function getAllPacksThemes($completed, $packTypeId, $name)
    {
        $q = $this->createQueryBuilder('p')
            ->where('p.pack_type = :type');
        $q->join('p.initial', 'i');

        if ($completed !== null && $completed != 'all') {
            $q->andWhere('i.completed = :completed')
                ->setParameter('completed', $completed);
        }
        if ($packTypeId !== null && $packTypeId != 'all') {
            $q->andWhere('p.pack_type_id = :pack_type_id')
                ->setParameter('pack_type_id', $packTypeId);
            $q->andWhere('p.status != :status')
                ->setParameter('status', 'finished');
        }
        if ($name) {
            $q->andWhere('i.lastname LIKE :lastname OR i.firstname LIKE :lastname')
                ->setParameter('lastname', '%'.$name.'%');
        }
        $q->orderBy('p.startedAt', 'DESC')
            ->setParameter('type', 'themes');

        return $q->getQuery()->getResult();
    }

    public function getPacksToResume(){

        $q = $this->createQueryBuilder('p')
            ->where('p.status = :status')
            ->andWhere('p.resumeAt = :resumeAt')
            ->setParameter('status', 'pause')
            ->setParameter('resumeAt', date('Y-m-d'));

        return $q->getQuery()->getResult();
        
    }
}